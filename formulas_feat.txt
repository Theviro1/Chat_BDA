w_pos_act_mass = Sum ( w_pos_act_mass_i )
c_pos_theo_cap = Sum ( ( w_pos_act_mass_i / w_pos_act_mass ) * c_pos_theo_cap_i )
c_pos_real_cap = Sum ( ( w_pos_act_mass_i / w_pos_act_mass ) * c_pos_real_cap_i )
c_pos_s_max = Sum ( ( w_pos_act_mass_i / w_pos_act_mass ) * c_pos_s_max_i )
coef_pos_ins_li = c_pos_real_cap / c_pos_theo_cap
rou_pos_surf_cap = ( rou_pos_comp_roll * D_pos_coat_roll * w_pos_act_mass * c_pos_real_cap ) / 10000
D_pos_coat_roll = ( rou_pos_surf_cap * 10000 ) / ( c_pos_real_cap * w_pos_act_mass * rou_pos_comp_roll )
D_pos_coat_roll_reb = D_pos_coat_roll * ( 1 + eta_pos_roll_reb )
D_pos_coat_form_reb = D_pos_coat_roll_reb * ( 1 + eta_pos_form_reb )
rou_pos_comp_roll_reb = ( D_pos_coat_roll * rou_pos_comp_roll ) / D_pos_coat_roll_reb
rou_pos_comp_form_reb = ( D_pos_coat_roll * rou_pos_comp_roll ) / D_pos_coat_form_reb
m_pos_solid = v_pos_coat_roll_reb * rou_pos_comp_roll_reb
m_pos_i = w_pos_act_mass_i * m_pos_solid
v_pos_i = ( m_pos_i * c_pos_real_cap_i * 3600000 ) / ( ( c_pos_real_cap_i / c_pos_theo_cap_i ) * F * c_pos_s_max_i )
v_pos_binder = m_pos_binder / rou_pos_binder
v_pos_solid = v_pos_act_total + v_pos_binder_total + v_pos_conduct_total
v_pos_coat_roll = ( v_pos_coat_roll_reb * D_pos_coat_roll ) / D_pos_coat_roll_reb
v_pos_coat_form = ( v_pos_coat_roll_reb * D_pos_coat_form ) / D_pos_coat_roll_reb
eta_pos_coat_por_roll = 1 - ( v_pos_solid / v_pos_coat_roll )
eta_pos_coat_por_form = 1 - ( v_pos_solid / v_pos_coat_form )
eta_pos_coat_por_roll_reb = 1 - ( v_pos_solid / v_pos_coat_roll_reb )

w_neg_act_mass = Sum ( w_neg_act_mass_i )
c_neg_theo_cap = Sum ( ( w_neg_act_mass_i / w_neg_act_mass ) * c_neg_theo_cap_i )
c_neg_real_cap = Sum ( ( w_neg_act_mass_i / w_neg_act_mass ) * c_neg_real_cap_i )
c_neg_s_max = Sum ( ( w_neg_act_mass_i / w_neg_act_mass ) * c_neg_s_max_i )
coef_neg_ins_li = c_neg_real_cap / c_neg_theo_cap
rou_neg_surf_cap = rou_surf_cap * NP
D_neg_coat_roll = ( rou_neg_surf_cap * 10000 ) / ( c_neg_real_cap * w_neg_act_mass * rou_neg_comp_roll )
D_neg_coat_roll_reb = D_neg_coat_roll * ( 1 + eta_neg_roll_reb )
D_neg_coat_form_reb = D_neg_coat_roll_reb * ( 1 + eta_neg_form_reb )
rou_neg_comp_roll_reb = ( D_neg_coat_roll * rou_neg_comp_roll ) / D_neg_coat_roll_reb
rou_neg_comp_form_reb = ( D_neg_coat_roll * rou_neg_comp_roll ) / D_neg_coat_form_reb
m_neg_solid = v_neg_coat_roll_reb * rou_neg_comp_roll_reb
m_neg_i = w_neg_act_mass_i * m_neg_solid
v_neg_i = ( m_neg_i * c_neg_real_cap_i * 3600000 ) / ( ( c_neg_real_cap_i / c_neg_theo_cap_i ) * F * c_neg_s_max_i )
v_neg_binder = m_neg_binder / rou_neg_binder
v_neg_solid = v_neg_act_total + v_neg_binder_total + v_neg_conduct_total
v_neg_coat_roll = ( v_neg_coat_roll_reb * D_neg_coat_roll ) / D_neg_coat_roll_reb
v_neg_coat_form = ( v_neg_coat_roll_reb * D_neg_coat_form ) / D_neg_coat_roll_reb
eta_neg_coat_por_roll = 1 - ( v_neg_solid / v_neg_coat_roll )
eta_neg_coat_por_form = 1 - ( v_neg_solid / v_neg_coat_form )
eta_neg_coat_por_roll_reb = 1 - ( v_neg_solid / v_neg_coat_roll_reb )

# dense卷绕方式
D_needle = 2 * D_sep                                                                                                   
W_needle_rect = W_needle - D_needle
D_repeat = 2 * ( D_pos_coat_roll_reb + D_neg_coat_roll_reb + D_sep ) + D_pos_cc + D_neg_cc
# 正极起卷
R_0_pos = ( D_pos_cc + D_needle ) / 2                                                                                   
R_0_neg = ( ( D_neg_cc + D_needle ) / 2 ) + D_pos_cc + D_sep + D_neg_coat_roll_reb + D_pos_coat_roll_reb
L_pos_total = 3.14159265 * N_roll * ( 2 * R_0_pos + N_roll * D_repeat ) + W_needle_rect * cnt_line
L_pos_1 = 3.14159265 * ( 2 * R_0_pos + D_repeat ) + W_needle_rect * 2
L_neg_total = 3.14159265 * N_roll * ( 2 * R_0_neg + N_roll * D_repeat ) + W_needle_rect * cnt_line - ( L_start_in * 1000 )
L_neg_1 = 3.14159265 * ( 2 * R_0_neg + D_repeat ) + W_needle_rect * 2 - ( L_start_in * 1000 )
# 负极起卷
R_0_neg = ( D_neg_cc + D_needle ) / 2                                                                                   
R_0_pos = ( ( D_pos_cc + D_needle ) / 2 ) + D_neg_cc + D_sep + D_neg_coat_roll_reb + D_pos_coat_roll_reb
L_pos_total = 3.14159265 * N_roll * ( 2 * R_0_pos + N_roll * D_repeat ) + W_needle_rect * cnt_line - ( L_start_in * 1000 )
L_pos_1 = 3.14159265 * ( 2 * R_0_pos + D_repeat ) + W_needle_rect * 2 - ( L_start_in * 1000 )
L_neg_total = 3.14159265 * N_roll * ( 2 * R_0_neg + N_roll * D_repeat ) + W_needle_rect * cnt_line
L_neg_1 = 3.14159265 * ( 2 * R_0_neg + D_repeat ) + W_needle_rect * 2
# 需要向上取整
cnt_line = 2 * N_roll




